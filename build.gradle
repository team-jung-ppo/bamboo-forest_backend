plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.jungppo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Mvc
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // JDBC (인증 서버에서 발급 받은 Access 토큰 저장)
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'
    // PostgreSQL
    implementation 'org.postgresql:postgresql'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.12.3'
    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // Retry
    implementation 'org.springframework.retry:spring-retry'
    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // JSR305
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // NplusOneDetector
    implementation 'com.github.joon6093:jpa-nplus1-detector:1.1.1'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot Test
    testImplementation 'org.springframework.security:spring-security-test' // Spring Security Test
    testImplementation 'org.projectlombok:lombok' // Lombok for testing
    testAnnotationProcessor 'org.projectlombok:lombok' // Lombok for testing
    testRuntimeOnly 'com.h2database:h2' // H2 for testing
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}
